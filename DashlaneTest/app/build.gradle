apply plugin: 'com.android.application'

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.2"

    defaultConfig {
        applicationId "org.mariusconstantin.dashlanetest"
        minSdkVersion 16
        targetSdkVersion 22
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner 'android.support.test.runner.AndroidJUnitRunner'

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }


    }

    productFlavors {
        mock {
            applicationIdSuffix = ".mock"
        }
        prod {

        }
    }

    android.variantFilter { variant ->
        if(variant.buildType.name.equals('release')
                && variant.getFlavors().get(0).name.equals('mock')) {
            variant.setIgnore(true);
        }
    }

    // Always show the result of every unit test, even if it passes.
    /*testOptions.unitTests.all {
        testLogging {
            events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
        }
    }*/
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile libraries.appcompat
    compile libraries.retrofit
    compile libraries.recyclerview
    compile libraries.picasso
    compile libraries.fastscroller
    testCompile libraries.unit_test
    androidTestCompile libraries.android_test
}

configurations {
    testCompile.exclude module: "okhttp"
    androidTestCompile.exclude module: "support-annotations"
    androidTestCompile.exclude module: "recyclerview-v7"
    androidTestCompile.exclude module: "support-v4"
    androidTestCompile.exclude module: "support-v13"
}

configurations.all {
    resolutionStrategy.force libraries.annotations
}

/*
All direct/transitive dependencies shared between your test and production APKs need to be
excluded from the test APK! This is necessary because both APKs will contain the same classes. Not
excluding these dependencies from your test configuration will result in an dex pre-verifier error
at runtime. More info in this tools bug: (https://code.google.com/p/android/issues/detail?id=192497)
*/
configurations.compile.dependencies.each { compileDependency ->
    println "Excluding compile dependency: ${compileDependency.getName()}"
    configurations.androidTestCompile.dependencies.each { androidTestCompileDependency ->
        configurations.androidTestCompile.exclude module: "${compileDependency.getName()}"
    }
}